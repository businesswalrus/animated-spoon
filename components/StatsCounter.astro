---
// /components/StatsCounter.astro
const { number, label, icon } = Astro.props;
---
<div class="col-md-3 mb-4 mb-md-0">
  <div class="bg-white p-4 rounded shadow-sm" style="border-top: 4px solid #B31942;">
    <div class="text-center">
      <i class={`fas ${icon} fa-3x mb-3`} style="color: #B31942;"></i>
      <h3 class="counter fw-bold stats-number" style="font-size: 2.5rem; color: #0A3161;">{number}</h3>
      <p class="text-uppercase fw-bold" style="letter-spacing: 1px; color: #555; font-size: 0.9rem;">{label}</p>
    </div>
    
    <style>
      @media (max-width: 576px) {
        .stats-number {
          text-align: left;
          padding-left: 1rem;
        }
      }
    </style>
  </div>
</div>

<script>
  // Add animation to the counters when they come into view
  document.addEventListener('DOMContentLoaded', function() {
    const counters = document.querySelectorAll('.counter');
    const options = {
      threshold: 0.5
    };
    
    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          // Add a class to make the number appear to count up
          entry.target.classList.add('animate-counter');
          observer.unobserve(entry.target);
        }
      });
    }, options);
    
    counters.forEach(counter => {
      observer.observe(counter);
    });
  });
</script>

<style>
  .animate-counter {
    animation: countUp 2s ease-out forwards;
  }
  
  @keyframes countUp {
    from {
      transform: translateY(20px);
      opacity: 0;
    }
    to {
      transform: translateY(0);
      opacity: 1;
    }
  }
</style>
